#!/bin/sh

display_help() {
    echo
    echo "Usage: svg-stroke-to-path select_method select_attr file ..."
    echo
    echo "  select_method can be one of:"
    echo "    * All - Select all objects"
    echo "    * AllInAllLayers - Select all objects in all visible and"
    echo "      unlocked layers"
    echo "    * SameFillStroke - Select all objects with the same fill"
    echo "      and stroke as the selected objects"
    echo "    * SameFillColor - Select all objects with the same fill"
    echo "      as the selected objects"
    echo "    * SameStrokeColor - Select all objects with the same"
    echo "      stroke as the selected objects"
    echo "    * SameStrokeStyle - Select all objects with the same stroke"
    echo "      style (width, dash, markers) as the selected objects"
    echo
    echo "  select_attr can be a variety of SVG attributes, for example:"
    echo "    * 'stroke=\"#000\"'"
    echo "    * 'fill=\"#000\"'"
    echo "    * 'stroke=\"red\" stroke-weight=\"2\"'"
    echo
}

if [ "$1" == "-h" ]; then
  display_help
  exit 0
fi

# Verify that Inkscape is installed
if ! [ -x "$(command -v inkscape)" ]; then
  display_help
  echo 'Error: inkscape is not installed.' >&2
  exit 1
fi

# Hopefully this `realpath` shim works on all platforms ðŸ˜¬
script_path="$(cd "$(dirname "$0")" && pwd -P)"

# Read the arguments
select_method=$1
select_attr=$2
shift 2

# Validate that select method is a valid string
case $select_method in
    All|\
    AllInAllLayers|\
    SameFillStroke|\
    SameFillColor|\
    SameStrokeColor|\
    SameStrokeStyle);;
    *)
    display_help;
    echo "Error: select_method '$select_method' is not valid"
    exit 1;;
esac

# Validate that the select attr is set
if [ -z "$select_attr" ]; then
    display_help
    echo "Error: select_attr required"
    exit 1
fi

validate_file() {
    # Validate that input_filename exists
    if [ ! -f "$1" ]; then
        display_help
        echo "Error: input_filename '$1' not found"
        exit 1
    fi

    # Validate that content contains closing `svg` tag
    if ! grep -q "</svg>" "$1"; then
        display_help
        echo "Error: input_filename '$1' not valid SVG"
        exit 1
    fi
}

for file in "$@"
do
    validate_file "$file"
done

convert_file() {
    select_method=$1
    select_attr=$2
    input_filename=$3

    # Read input file
    input_content=`cat "$input_filename"`

    # Get position of closing `svg` tag in the SVG
    svg_close_index=`echo "$input_content" | grep -b -o "</svg>" | cut -d: -f1`

    # Generate the "selector" element
    selector_object_id='_StrokeToPathSelectorObject'
    selector_object="    <path\
     id=\"${selector_object_id}\"\
     ${select_attr}\
     d=\"M0 0 H 1\"/>\n"

     # Insert "selector" element into the SVG
     modified_input="${input_content:0:$svg_close_index}\
     $selector_object\
     ${input_content:$svg_close_index}"

     # Store the new SVG
     echo "$modified_input" > "$input_filename"

     # Convert stroke to path by selecting the "selector" element and use Inkscapes
     # selector query to select similar objects and convert stroke to path
     inkscape -f "$input_filename"\
         --select=$selector_object_id\
         --verb="EditSelect$select_method"\
         --verb="StrokeToPath"\
         --verb="EditDeselect"\
         --select=$selector_object_id\
         --verb="EditDelete"\
         --verb="FileSave"\
         --verb="FileQuit"
}

for file in "$@"
do
    convert_file $select_method "$select_attr" "$script_path/$file"
done
